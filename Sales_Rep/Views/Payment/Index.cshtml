@model IEnumerable<Sales_Rep.Models.tmpcart>
@{
    //Layout = null;
    ViewBag.title = "Index";

    decimal totalamount = 0.00M;
    decimal grandtot = 0.00M;
}
<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
</head>
<style>
    .card {
        margin-bottom: 1.5rem
    }

    .card {
        position: relative;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid #c8ced3;
        border-radius: .25rem
    }

    .card-header:first-child {
        border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0
    }

    .card-header {
        padding: .75rem 1.25rem;
        margin-bottom: 0;
        background-color: #f0f3f5;
        border-bottom: 1px solid #c8ced3
    }

    .Bordeless {
        border: none;
    }




    body {
        font-family: Arial, Helvetica, sans-serif;
    }

    * {
        box-sizing: border-box;
    }

    /* Full-width input fields */
    input[type=text], input[type=password] {
        width: 100%;
        padding: 15px;
        margin: 5px 0 22px 0;
        display: inline-block;
        border: none;
        background: #f1f1f1;
    }

        /* Add a background color when the inputs get focus */
        input[type=text]:focus, input[type=password]:focus {
            background-color: #ddd;
            outline: none;
        }

    /* Set a style for all buttons */
    button {
        background-color: #04AA6D;
        color: white;
        padding: 14px 20px;
        margin: 8px 0;
        border: none;
        cursor: pointer;
        width: 100%;
        opacity: 0.9;
    }

        button:hover {
            opacity: 1;
        }

    /* Extra styles for the cancel button */
    .cancelbtn {
        padding: 14px 20px;
        background-color: #f44336;
    }

    /* Float cancel and signup buttons and add an equal width */
    .cancelbtn, .signupbtn {
        float: left;
        width: 50%;
    }

    /* Add padding to container elements */
    .container {
        padding: 16px;
    }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: #474e5d;
        padding-top: 50px;
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }

    /* Style the horizontal ruler */
    hr {
        border: 1px solid #f1f1f1;
        margin-bottom: 25px;
    }

    /* The Close Button (x) */
    .close {
        position: absolute;
        right: 35px;
        top: 15px;
        font-size: 40px;
        font-weight: bold;
        color: #f1f1f1;
    }

        .close:hover,
        .close:focus {
            color: #f44336;
            cursor: pointer;
        }

    /* Clear floats */
    .clearfix::after {
        content: "";
        clear: both;
        display: table;
    }

    /* Change styles for cancel button and signup button on extra small screens */
    media screen and (max-width: 300px) {
        .cancelbtn, .signupbtn

    {
        width: 100%;
    }
</style>


<div class="container-fluid">
    <div id="ui-view" data-select2-id="ui-view">
        <div>
            <div class="card">
                <div class="card-header">
                    Invoice
                    <strong><input id="invnoA" class="Bordeless" value="@ViewBag.INV" disabled></strong>
                    <a class="btn btn-sm btn-secondary float-right mr-1 d-print-none" href="#" onclick="javascript:window.print();" data-abc="true">
                        <i class="fa fa-print"></i> Print
                    </a>

                    <a class="btn btn-sm btn-info float-right mr-1 d-print-none" href="#" onclick="ReloadList();" data-abc="true">
                            <i class="fa fa-save"></i> Priority List
                        </a>
                </div>
                <div class="card-body">
                    <a href="#" onclick="document.getElementById('id01').style.display='block'" style="width:auto;"><i class="fa fa-plus"></i></a>
                    <div class="row mb-4">
                        <div id="id01" class="modal">
                            <span onclick="document.getElementById('id01').style.display='none'" class="close" title="Close Modal">&times;</span>
                            <form class="modal-content">
                                <div class="container">
                                    <h1>Invoice</h1>
                                    Invoice No:<b><input id="invnoA" class="Bordeless" value="@ViewBag.INV" disabled></b>
                                    <hr>
                                    <div class="table-responsive-sm">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th class="center">#</th>
                                                    <th>Item</th>
                                                    <th>Category</th>

                                                    <th class="right">Unit Cost</th>
                                                    <th class="center">Qty</th>
                                                    <th class="right">Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td class="center">1</td>
                                                    <td class="left strong">
                                                        @Html.DropDownList("Item_Id", (SelectList)ViewBag.Item, "-Item-",
                                                            new { @class = "form-control", @required = "required", @onchange = "getRef(this.value)" })
                                                    </td>
                                                    <td class="left">
                                                        <input type="text" id="category" name="category" class="form-control">
                                                        @*@Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })*@
                                                        @*@Html.ValidationMessageFor(model => model.StockOnHand, "", new { @class = "text-danger" })*@
                                                    </td>

                                                    <td class="right">
                                                        <input type="text" id="price" name="price" class="form-control">
                                                        @*@Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })*@
                                                        @*@Html.ValidationMessageFor(model => model.StockOnHand, "", new { @class = "text-danger" })*@
                                                    </td>
                                                    <td class="center">
                                                        <input type="text" id="qty" name="qty" class="form-control" onkeyup="return getTotals()">
                                                        @*@Html.EditorFor(model => model.qty, new { htmlAttributes = new { @class = "form-control", @onkeyup = "getTotal(this.value)" } })*@
                                                    </td>
                                                    <td class="right">
                                                        <input type="text" id="total" name="total" class="form-control">
                                                        @*>@Html.EditorFor(model => model.total, new { htmlAttributes = new { @class = "form-control" } })*@
                                                    </td>
                                                </tr>

                                                @*<tr>
                                                        <td>
                                                            <a href="#"><i class="fa fa-plus"></i></a>
                                                        </td>
                                                    </tr>*@
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="clearfix">
                                        <button type="button" onclick="document.getElementById('id01').style.display='none'" class="cancelbtn">Cancel</button>
                                        <button type="submit" onclick="btn_Save()" class="signupbtn">Enter</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        @*<div class="col-sm-4">
                                <h6 class="mb-3">From:</h6>
                                <div>
                                    <strong>BBBootstrap.com</strong>
                                </div>
                                <div>42, Awesome Enclave</div>
                                <div>New York City, New york, 10394</div>
                                <div>Email: admin@bbbootstrap.com</div>
                                <div>Phone: +48 123 456 789</div>
                            </div>
                            <div class="col-sm-4">
                                <h6 class="mb-3">To:</h6>
                                <div>
                                    <strong>BBBootstrap.com</strong>
                                </div>
                                <div>42, Awesome Enclave</div>
                                <div>New York City, New york, 10394</div>
                                <div>Email: admin@bbbootstrap.com</div>
                                <div>Phone: +48 123 456 789</div>
                            </div>
                            <div class="col-sm-4">
                                <h6 class="mb-3">Details:</h6>
                                <div>
                                    Invoice
                                    <strong>#BBB-10010110101938</strong>
                                </div>
                                <div>April 30, 2019</div>
                                <div>VAT: NYC09090390</div>
                                <div>Account Name: BBBootstrap Inc</div>
                                <div>
                                    <strong>SWIFT code: 99 8888 7777 6666 5555</strong>
                                </div>
                            </div>*@
                    </div>
                    <div class="table-responsive-sm">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th class="center">#</th>
                                    <th>Item</th>
                                    <th>Description</th>
                                    <th class="center">Quantity</th>
                                    <th class="right">Unit Cost</th>
                                    <th class="right">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    totalamount += Convert.ToDecimal(item.total);
                                    grandtot = totalamount;

                                    <tr>
                                        <td class="center"> @Html.DisplayFor(modelItem => item.id)</td>
                                        <td class="left strong"> @Html.DisplayFor(modelItem => item.item) </td>
                                        <td class="left">  @Html.DisplayFor(modelItem => item.category)</td>

                                        <td class="right"> @Html.DisplayFor(modelItem => item.price)</td>
                                        <td class="center">  @Html.DisplayFor(modelItem => item.qty)</td>
                                        <td class="right"> @Html.DisplayFor(modelItem => item.total)</td>
                                        <td class="right">
                                            @*<a href="#"  style="width:auto;" new{id = item.id}>
                                                    <i class="fa fa-plus"></i>
                                                </a>*@

                                            <a href="#" onclick="btn_Delete()" style="width:auto;">
                                                <i class="fa fa-trash"></i>
                                            </a>
                                            @Html.ActionLink("Delete", "Deleteinv", new { id = item.id })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="row">

                        <div class="col-lg-4 col-sm-5 ml-auto">
                            <table class="table table-clear">
                                <tbody>
                                    <tr>
                                        <td class="left">
                                            <strong>Subtotal</strong>
                                        </td>
                                        <td class="right"> <input id="subtot" class="Bordeless" value="@totalamount.ToString()" ></td>
                                    </tr>
                                    <tr>
                                        <td class="left">
                                            <strong>Discount</strong>
                                        </td>
                                        <td class="right"> <input id="Discount" class="Bordeless" value="0.00" onkeyup="getdiscount(this.value)" autofocus></td>
                                    </tr>
                                    @*<tr>
                                            <td class="left">
                                                <strong>VAT (10%)</strong>
                                            </td>
                                            <td class="right">$679,76</td>
                                        </tr>*@
                                    <tr>
                                        <td class="left">
                                            <strong>Total</strong>
                                        </td>
                                        <td class="right">
                                            <strong><input id="grandtot" class="Bordeless" value="@grandtot.ToString()" ></strong>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            @*<a class="btn btn-success" href="#" data-abc="true">*@
                            <button type="submit" onclick="btn_process()" class="btn btn-success">Proceed to Payment</button>
                            @*<i class="fa fa-usd" onclick="btn_process()"></i> Proceed to Payment*@
                            @*</a>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>


    // Get the modal
    var modal = document.getElementById('id01');

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }


    function getRef(code) {
        $.ajax({
            url: '@Url.Action("GetRefId", "Payment")',
            type: "GET",
            data: { "id": code },
            "success": function (data) {
                if (data != null) {
                    var vdata = data;
                    //alert(vdata.ban);

                    $("#category").val(vdata.seq);
                    $("#price").val(vdata.ban);
                }
            }
        });
    }
    //getTotal

    var QuentityInput = document.getElementById('qty');
    QuentityInput.onchange = function() {
        //debugger

        var Price = $('#price').val();
        var qty = $('#qty').val();

        $.ajax({
            url: '@Url.Action("GetTotla", "Payment")',
            type: "GET",
            data: { "qty": qty, "price": Price },
            "success": function (data) {
                if (data != null) {
                   // debugger
                    //document.getElementById('total').innerHTML = data;
                    $("#total").val(data);
                }
            }
        });
    }


    function btn_Delete() {
       // debugger
         id = $('#id').val();

       // debugger
         $.ajax({
            url: '@Url.Action("Deleteinv", "Payment")',
            type: "GET",
             dataType: "JSON",
             data: { id: id },
            success: function (data) {
                if (data == true) {
                   // alert("Successfully Save!")
                    window.location.href = "/Payment/Index";
                }
                else {
                    alert("Unsuccessfully Save!");
                    $.each(data, function (i, index) {

                    });
                }
            }
        });
    }

    function btn_Save() {


        Item = $("#Item_Id").val();
        category = $("#category").val();
        Price = $("#price").val();
        Qty = $("#qty").val();
        Total = $("#total").val();
        inv_no = $("#invnoA").val();

        alert(Item);

        $.ajax({
            url: '@Url.Action("Createtmpinvoice", "Payment")',
            type: "GET",
            dataType: "JSON",
            data: { Item: Item, category: category, Price: Price, Qty: Qty, Total: Total, inv_no: inv_no},
            success: function (data) {
                if (data == true) {
                   // alert("Successfully Save!")
                    window.location.href = "/Payment/Index";
                }
                else {
                    alert("Unsuccessfully Save!");
                    $.each(data, function (i, index) {

                    });
                }
            }
        });
    }


    var DiscountInput = document.getElementById('Discount');
    DiscountInput.onchange = function() {
        //debugger

         var subtot = $('#subtot').val();
        var Discount = $('#Discount').val();

       // debugger
        $.ajax({
            url: '@Url.Action("Getdiscount", "Payment")',
            type: "GET",
            data: { "Discount": Discount, "subtot": subtot },
            "success": function (data) {
                if (data != null) {

                    $("#grandtot").val(data);
                }
            }
        });





    }

    function getdiscount(Discount) {
        //debugger
        var subtot = $('#subtot').val();
        var vat = $('#vat').val();

       // debugger
        $.ajax({
            url: '@Url.Action("Getdiscount", "Payment")',
            type: "GET",
            data: { "Discount": Discount, "subtot": subtot, "vat": vat },
            "success": function (data) {
                if (data != null) {

                    $("#grandtot").val(data);
                }
            }
        });
        }

    function getbalance(CustMoney) {
        var Discount = $('#Discount').val();
        var subtot = $('#subtot').val();
        var vat = $('#vat').val();

       // debugger
        $.ajax({
            url: '@Url.Action("Getbalance", "Invoice")',
            type: "GET",
            data: { "CustMoney": CustMoney,"Discount": Discount, "subtot": subtot, "vat": vat },
            "success": function (data) {
                if (data != null) {

                    $("#Balance").val(data);
                }
            }
        });
    }



    function btn_process()
    {


        var invno = $("#invnoA").val();
        var subtot = $("#subtot").val();
        var Discount = $("#Discount").val();
        //var vat = $("#vat").val();
        var grandtot = $("#grandtot").val();
        //var CustMoney = $("#CustMoney").val();
        //var Balance = $("#Balance").val();


        $.ajax({
            url: '@Url.Action("ProcessInv", "Payment")',
            method: 'POST',
            data: {
                invno: invno, subtot: subtot, Discount: Discount/*, vat: vat*/, grandtot: grandtot/*, CustMoney: CustMoney, Balance: Balance*/
            },


 success: function (data) {
 if (data == true) {
                     //alert("Successfully Save!")
                    //if (confirm('Are you sure you want to print invoice?')) {
                    //    // Save it!
                    //    var id = "6";
                    //    window.open('/Reports/Brands.aspx?id='
                    //        + id + '&&searchText=' + invno, '_blank');

                    window.location.href = "/Payment/Index";
                }
                else {
                        // Do nothing!
                    window.location.href = "/Payment/Index";
                    }

                //else {
                //    alert("Unsuccessfully Save!");
                //    $.each(data, function (i, index) {

                //    });
                //}
            }
        });
    }

    @*function btn_process() {
        var invno = $("#invno").val();
        //alert(invno);
        debugger
        var txt;
        if (confirm("Press a button!")) {

            txt = "You pressed OK!";

            $.ajax({
            url: '@Url.Action("ProcessInv", "Invoice")',
            type: "POST",
            dataType: "JSON",
            data: {invno: invno},
            success: function (data) {
                if (data == true) {
                    alert("Successfully Save!")
                    window.location.href = "/Invoice/Index";
                }
                else {
                    alert("Unsuccessfully Save!");
                    //$.each(data, function (i, index) {

                    //});
                }
            }
        });
        } else {
            txt = "You pressed Cancel!";
        }

    }*@


    function ReloadList() {

        location.href = "/Products/ProductPriorityListIndex";
    }



    n = new Date();
    y = n.getFullYear();
    m = n.getMonth() + 1;
    d = n.getDate();
    document.getElementById("date").innerHTML = m + "/" + d + "/" + y;




</script>


